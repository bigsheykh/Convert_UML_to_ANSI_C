UI:
  1: make it general

classBaseUML:
  1: SameAttributeAndMethodName
  2: SameAttributeAndClassName
  3: SameMethodAndClassName
  4: get directory of phase1 output

diagramGUI:
  1: get directory of phase1 output
  2: Show diagram
  3: make 2 phase controller
  4: redesign info getter

Phase1CodeGeneration:
  1: output status if failed and when it failed (do it for first and final)
  2: result dependency (do it for first and final)
  3: check header upper method call

Phase2CodeGeneration:
  2: edit c files
    a : constructor
     I: definiton
     II: "new"
    c: "class" -> "union"
    d: cast (optional)
    e: method call
    g: ()
    h: []
    Db: destructor
      I: "delete"
      II: }
    Df: {}


  detail:

    see class X -> union X
      if(--- is not a pointer)
        sizeof(---) do nothing
    optinal: (---) v -> v.union---

    constructor: (if it's not param)
      class v m (if pointer = 0)
        use constructor(&m)
      class v m(--)
        use constructor(&m, --)
      class *m = new class V(--)
        use malloc
        use constructor(m, --)

    class *m = new class V[]
      use malloc
      use array constructor

    method:
      v->m(---)
        use m(v,---)
      v.m(---)
        use m(&(v), ---)

    destructor:
      delete x
    destructor x
      delete[] x
      destructor all x


    cpp:
      ID::ID(---)
      change constructor signature
      ID::~ID()
      change destructor signature
      type ID::name(----)
      change method signature


      detect attributes without this
      detect methods without this



test:
  1: phase1 and 2 total
  2: xml*
  3: BasicDiagramStatus+
  4: graphBaseDependency+

laptop: 
        https://www.cpubenchmark.net/compare/AMD-FX-7600P-vs-Intel-i7-10870H-vs-Intel-i7-10750H/2475vs3856vs3657
        https://www.videocardbenchmark.net/compare/GeForce-RTX-3060-Laptop-GPU-vs-GeForce-RTX-2060-vs-GeForce-GTX-1650-Ti/4342vs4037vs4195
